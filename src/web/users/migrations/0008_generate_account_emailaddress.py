# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-07 21:50
from __future__ import unicode_literals

from django.apps import apps as global_apps
from django.db import migrations

import sys


def create_account_email_addresses(apps, schema_editor):
    if not apps.is_installed('account'):
        return
    UserModel = apps.get_model('users', 'User')
    EmailAddressModel = apps.get_model('account', 'EmailAddress')
    already_created = 0
    created = 0
    conflicts = 0
    for user in UserModel.objects.all():
        if not user.is_active:
            continue
        if not user.email:
            sys.stderr.write("User(id %d name '%s') has no email and was skipped\n"
                             % (user.id, user.username))
            conflicts += 1
            continue
        email_address = EmailAddressModel.objects.filter(email__iexact=user.email).first()
        if email_address:
            if email_address.user_id != user.id:
                sys.stderr.write("(user_id %d) Email %s already used by another user(id %d email %s)\n"
                                 % (user.id, user.email, email_address.user_id, email_address.email))
                conflicts += 1
            else:
                already_created += 1
        else:
            EmailAddressModel.objects.create(user=user,
                                             email=user.email,
                                             primary=True,
                                             verified=user.is_email_confirmed)
            created += 1
    sys.stderr.write('Created %d, already created %d, conflicts %d\n' % (created, already_created, conflicts))


class Migration(migrations.Migration):
    operations = [
        migrations.RunPython(create_account_email_addresses, migrations.RunPython.noop),
    ]

    dependencies = [
        ('users', '0007_auto_20170306_2019'),
    ]

    if global_apps.is_installed('allauth.account'):
        dependencies.append(('account', '0002_email_max_length'))

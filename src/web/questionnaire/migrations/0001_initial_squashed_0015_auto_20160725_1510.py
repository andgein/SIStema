# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-28 21:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djchoices.choices


class Migration(migrations.Migration):

    replaces = [('questionnaire', '0001_initial'), ('questionnaire', '0002_auto_20160324_1511'), ('questionnaire', '0003_auto_20160324_1542'), ('questionnaire', '0004_auto_20160324_1800'), ('questionnaire', '0005_auto_20160325_0105'), ('questionnaire', '0006_auto_20160328_0243'), ('questionnaire', '0007_auto_20160328_1223'), ('questionnaire', '0008_auto_20160328_1720'), ('questionnaire', '0009_auto_20160426_2151'), ('questionnaire', '0010_auto_20160515_1808'), ('questionnaire', '0011_auto_20160515_2339'), ('questionnaire', '0012_auto_20160519_1402'), ('questionnaire', '0013_auto_20160522_1904'), ('questionnaire', '0014_abstractquestionnairequestion_is_disabled'), ('questionnaire', '0015_auto_20160725_1510')]

    dependencies = [
        ('schools', '0002_auto_20160320_1808'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractQuestionnaireBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(help_text='Используется в урлах. Лучше обойтись латинскими буквами, цифрами и подчёркиванием', max_length=100)),
                ('order', models.IntegerField(default=0, help_text='Блоки выстраиваются по возрастанию порядка')),
            ],
            options={
                'ordering': ('questionnaire_id', 'order'),
            },
        ),
        migrations.CreateModel(
            name='AbstractQuestionnaireQuestion',
            fields=[
                ('abstractquestionnaireblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireBlock')),
                ('text', models.TextField(help_text='Вопрос')),
                ('is_required', models.BooleanField(help_text='Является ли вопрос обязательным')),
                ('help_text', models.CharField(blank=True, help_text='Подсказка, помогающая ответить на вопрос', max_length=400)),
                ('is_disabled', models.BooleanField(default=False, help_text='Выключена ли возможность ответить на вопрос. Не может быть отмечено одновременно с is_required')),
            ],
            options={
                'abstract': False,
            },
            bases=('questionnaire.abstractquestionnaireblock',),
        ),
        migrations.CreateModel(
            name='QuestionnaireBlockShowCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestionnaireQuestion',
            fields=[
                ('abstractquestionnairequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireQuestion')),
                ('is_inline', models.BooleanField()),
                ('is_multiple', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChoiceQuestionnaireQuestionVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='questionnaire.ChoiceQuestionnaireQuestion')),
                ('disable_question_if_chosen', models.BooleanField(default=False)),
                ('is_disabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(help_text='Используется в урлах. Лучше обойтись латинскими буквами, цифрами и подчёркиванием', max_length=100)),
                ('title', models.CharField(help_text='Название анкеты', max_length=100)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Session')),
                ('close_time', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestionnaireQuestion',
            fields=[
                ('abstractquestionnairequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireQuestion')),
                ('is_multiline', models.BooleanField()),
                ('fa', models.CharField(blank=True, help_text='Имя иконки FontAwesome, которую нужно показать в поле', max_length=20)),
                ('placeholder', models.TextField(blank=True, help_text='Подсказка, показываемая в поле для ввода; пример')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YesNoQuestionnaireQuestion',
            fields=[
                ('abstractquestionnairequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireQuestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='questionnaire',
            unique_together=set([('school', 'short_name')]),
        ),
        migrations.CreateModel(
            name='QuestionnaireAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_short_name', models.CharField(max_length=100)),
                ('answer', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserQuestionnaireStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(1, 'NOT FILLED'), (2, 'FILLED')], validators=[djchoices.choices.ChoicesValidator({1: 'NOT FILLED', 2: 'FILLED'})])),
            ],
            options={
                'verbose_name_plural': 'User questionnaire statuses',
            },
        ),
        migrations.AddField(
            model_name='userquestionnairestatus',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='questionnaire.Questionnaire'),
        ),
        migrations.AddField(
            model_name='userquestionnairestatus',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='questionnaireanswer',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.Questionnaire'),
        ),
        migrations.AddField(
            model_name='questionnaireanswer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userquestionnairestatus',
            unique_together=set([('user', 'questionnaire')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionnaireanswer',
            unique_together=set([]),
        ),
        migrations.AlterIndexTogether(
            name='questionnaireanswer',
            index_together=set([('questionnaire', 'user', 'question_short_name')]),
        ),
        migrations.CreateModel(
            name='DateQuestionnaireQuestion',
            fields=[
                ('abstractquestionnairequestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireQuestion')),
                ('with_year', models.BooleanField(default=True)),
                ('min_year', models.PositiveIntegerField(null=True)),
                ('max_year', models.PositiveIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarkdownQuestionnaireBlock',
            fields=[
                ('abstractquestionnaireblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='questionnaire.AbstractQuestionnaireBlock')),
                ('markdown', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('questionnaire.abstractquestionnaireblock',),
        ),
        migrations.AddField(
            model_name='questionnaireblockshowcondition',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='show_conditions', to='questionnaire.AbstractQuestionnaireBlock'),
        ),
        migrations.AddField(
            model_name='questionnaireblockshowcondition',
            name='need_to_be_checked',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='questionnaire.ChoiceQuestionnaireQuestionVariant'),
        ),
        migrations.AddField(
            model_name='abstractquestionnaireblock',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_questionnaire.abstractquestionnaireblock_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='abstractquestionnaireblock',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.Questionnaire'),
        ),
        migrations.AlterUniqueTogether(
            name='abstractquestionnaireblock',
            unique_together=set([('short_name', 'questionnaire'), ('questionnaire', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionnaire',
            unique_together=set([('school', 'short_name')]),
        ),
    ]

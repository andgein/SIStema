# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-16 19:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modules.entrance.models.steps


class Migration(migrations.Migration):

    replaces = [('entrance', '0025_auto_20170311_2331'), ('entrance', '0026_auto_20170312_0128'), ('entrance', '0027_auto_20170316_1910'), ('entrance', '0028_auto_20170316_2009'), ('entrance', '0029_resultsentrancestep'), ('entrance', '0030_auto_20170317_0038')]

    dependencies = [
        ('entrance', '0024_entranceexamtask_order'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('questionnaire', '0001_initial_squashed_0015_auto_20160725_1510'),
        ('schools', '0012_auto_20170219_2232'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractEntranceStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Шаги упорядочиваются по возрастанию этого параметра')),
                ('available_from_date', models.DateField(blank=True, default=None, help_text='Начиная с какой даты доступен шаг', null=True)),
                ('available_to_date', models.DateField(blank=True, default=None, help_text='До какой даты доступен доступен шаг', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='entrancestep',
            name='school',
        ),
        migrations.RemoveField(
            model_name='entrancestepshomepageblock',
            name='is_past',
        ),
        migrations.CreateModel(
            name='ConfirmProfileEntranceStep',
            fields=[
                ('abstractentrancestep_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entrance.AbstractEntranceStep')),
                ('text_after_finish_date', models.TextField(blank=True, help_text='Текст, который показывается после даты окончания заполнения. Поддерживается Markdown')),
                ('text_before_start_date', models.TextField(blank=True, help_text='Текст, который показывается до даты начала заполнения шага. Поддерживается Markdown')),
                ('text_waiting_for_other_step', models.TextField(blank=True, help_text='Текст, который показывается, когда не пройден один изпредыдущих шагов. Поддерживается Markdown')),
                ('text_step_is_not_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг ещё не пройден. Поддерживается Markdown')),
                ('text_step_is_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг пройден пользователем. Поддерживается Markdown')),
            ],
            options={
                'abstract': False,
            },
            bases=('entrance.abstractentrancestep', models.Model),
        ),
        migrations.CreateModel(
            name='FillQuestionnaireEntranceStep',
            fields=[
                ('abstractentrancestep_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entrance.AbstractEntranceStep')),
                ('questionnaire', models.ForeignKey(help_text='Анкета, которую нужно заполнить', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='questionnaire.Questionnaire')),
                ('text_after_finish_date', models.TextField(blank=True, help_text='Текст, который показывается после даты окончания заполнения. Поддерживается Markdown')),
                ('text_before_start_date', models.TextField(blank=True, help_text='Текст, который показывается до даты начала заполнения шага. Поддерживается Markdown')),
                ('text_waiting_for_other_step', models.TextField(blank=True, help_text='Текст, который показывается, когда не пройден один изпредыдущих шагов. Поддерживается Markdown')),
                ('text_step_is_not_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг ещё не пройден. Поддерживается Markdown')),
                ('text_step_is_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг пройден пользователем. Поддерживается Markdown')),
            ],
            options={
                'abstract': False,
            },
            bases=('entrance.abstractentrancestep', models.Model),
        ),
        migrations.CreateModel(
            name='SolveExamEntranceStep',
            fields=[
                ('abstractentrancestep_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entrance.AbstractEntranceStep')),
                ('exam', models.ForeignKey(help_text='Вступительная работа, которую нужно решить', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='entrance.EntranceExam')),
                ('text_after_finish_date', models.TextField(blank=True, help_text='Текст, который показывается после даты окончания заполнения. Поддерживается Markdown')),
                ('text_before_start_date', models.TextField(blank=True, help_text='Текст, который показывается до даты начала заполнения шага. Поддерживается Markdown')),
                ('text_waiting_for_other_step', models.TextField(blank=True, help_text='Текст, который показывается, когда не пройден один изпредыдущих шагов. Поддерживается Markdown')),
                ('text_step_is_not_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг ещё не пройден. Поддерживается Markdown')),
                ('text_step_is_passed', models.TextField(blank=True, help_text='Текст, который показывается, когда шаг пройден пользователем. Поддерживается Markdown')),
            ],
            options={
                'abstract': False,
            },
            bases=('entrance.abstractentrancestep', models.Model),
        ),
        migrations.DeleteModel(
            name='EntranceStep',
        ),
        migrations.AddField(
            model_name='abstractentrancestep',
            name='available_after_step',
            field=models.ForeignKey(blank=True, default=None, help_text='Шаг доступен только при выполнении другого шага', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='entrance.AbstractEntranceStep'),
        ),
        migrations.AddField(
            model_name='abstractentrancestep',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_entrance.abstractentrancestep_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='abstractentrancestep',
            name='school',
            field=models.ForeignKey(help_text='Школа, к которой относится шаг', on_delete=django.db.models.deletion.CASCADE, related_name='entrance_steps', to='schools.School'),
        ),
        migrations.CreateModel(
            name='ResultsEntranceStep',
            fields=[
                ('abstractentrancestep_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entrance.AbstractEntranceStep')),
            ],
            options={
                'abstract': False,
            },
            bases=('entrance.abstractentrancestep',),
        ),
        migrations.DeleteModel(
            name='AbsenceReasonHomePageBlock',
        ),
        migrations.DeleteModel(
            name='EnrolledStepsHomePageBlock',
        ),
        migrations.DeleteModel(
            name='EntranceStatusHomePageBlock',
        ),
    ]

# Generated by Django 2.2.10 on 2021-05-09 10:12

from django.db import migrations, models
import django.db.models.deletion


def create_limiters(apps, _schema_editor):
    School = apps.get_model('schools', 'School')
    ContentType = apps.get_model('contenttypes', 'ContentType')


    limiter_models = [
        apps.get_model('topics', 'TopicsEntranceLevelLimiter'),
    ]
    for school in School.objects.all():
        if not hasattr(school, 'entrance_exam'):
            continue
        for limiter_model in limiter_models:
            content_type = ContentType.objects.get_for_model(limiter_model)
            limiter_model.objects.get_or_create(school=school, polymorphic_ctype=content_type)


class Migration(migrations.Migration):

    dependencies = [
        ('entrance', '0086_auto_20210509_1012'),
        ('topics', '0017_auto_20180421_0750'),
    ]

    operations = [
        migrations.CreateModel(
            name='TopicsEntranceLevelLimiter',
            fields=[
                ('entrancelevellimiter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entrance.EntranceLevelLimiter')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('entrance.entrancelevellimiter',),
        ),
        migrations.RunPython(
            code=create_limiters,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
